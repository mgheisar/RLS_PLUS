# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so
*.csv
*.sh

# Distribution / packaging
.Python
.idea
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

*.lmdb
*.pkl
*.pth
*.pt
*.jpg
*.jpeg
*.mp4
*.gif
*.iml
*.xml
*.rb
*.npy

wandb/


/lpips/weights/
/doc/

# calc_inception.py inception.py --> fid.py
calc_inception.py
inception.py
fid.py
dataset_utils.py
claculatePSNRSSIM.py

LICENSE
LICENSE-FID
LICENSE-LPIPS
LICENSE-NVIDIA

generate.py

prepare_data.py

op.tar.gz


calculate_niqe.py
realism_w.py

## remove for sharing
## test_mean.py, sr_boost_temp.py, sr_boost_ada_pivot.py
apply_factor_cells/
apply_factor/
BBBC021/
cache/
FLOWS/__pycache__/
Golgi/
torch_utils_brgm/
ada/
sample/
Golgi_summary/
checkpoint/
metrics/
torch_fidelity/
input/

test_robustness.py
FindMaxima.py
Golgi_classification.py
interpolation.py
golgi_plot.py
make_anim.py
brgm_utils.py
BRGM.py
BRGM_adapted.py
golgi_boxplot.py
LDA_Domain.py
PCA_domain.py
apply_factor.py
apply_factor_multiple.py
closed_form_factorization.py
domain_interpolation.py
ppl.py
project_domain.py
realism_fuction.py
treatment_classification.py
convert_weight.py
sr_boost_ada_pivot.py
calculateNIQE.py
run_passive.py
temp.py
calculatePSNRSSIM.py
realistic_metrics.py
calculate_id_sim.py
latent_dist.py
apply_pca.py
Downscaling.py
SR_multiple.py
test_mean.py
test_modelscope.py
test_GFPGAN.py
test_cop.py
temp_wn.py
temp_gn.py
temp_wng_mean.py
temp_g.py
sr_boost_temp.py
sr_boost_false.py
sr_boost_ada_false.py
res_paper.py
pulse_sr.py
id_loss.py
id_loss_v2.py
align_face.py
augs.py
calculateFID.py



ablation_scores_64x
ablation&robustness_scores_32x
### distributed.py --> train.py
### non_leaking.py --> train.py
